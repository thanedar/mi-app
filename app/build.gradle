buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.2'
    }
}

// Required because retrolambda is on maven central
repositories {
    mavenCentral()
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

buildscript {
    repositories {
        jcenter()

    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}
repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

android {
    signingConfigs {
        release {
            keyAlias 'telcel'
            keyPassword 'mitelcel'
            storeFile file('../keystore/mi-telcel.keystore')
            storePassword 'mitelcel'
        }
    }
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
    defaultConfig {
        applicationId "com.acotel.mitelcel"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName '1.0.0'
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace("app-release", "MiTelcel_rel_" + defaultConfig.versionName))
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries false
    }
    productFlavors {
    }
}

dependencies {

    //    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':library_mat_des_dialog')
    //DAGGER 2.0
    apt 'com.google.dagger:dagger-compiler:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    //OKHTTP

    //RxAndroid
    compile project(':viewserverfordebug')
    //    //bucksense
    //compile project(':buckstracks-ui')
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:support-v13:22.2.1'
    compile 'com.android.support:recyclerview-v7:22.2.1'
    compile 'com.android.support:cardview-v7:22.2.1'
    compile 'com.squareup.picasso:picasso:2.3.2'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.retrofit:retrofit-mock:1.9.0'
    compile 'com.android.support:support-v4:22.2.1'
    compile 'com.google.android.gms:play-services:7.8.0'
    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'com.google.dagger:dagger:2.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'org.projectlombok:lombok:1.16.4'
    compile 'io.reactivex:rxandroid:0.24.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
    compile 'de.greenrobot:greendao:1.3.7'
    compile 'com.google.android.gms:play-services-ads:7.8.0'
    compile 'com.google.android.gms:play-services-identity:7.8.0'
    compile 'com.google.android.gms:play-services-gcm:7.8.0'
    compile files('libs/adcolony.jar')
}

afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--multi-dex'
        //dx.additionalParameters += "--main-dex-list=$projectDir/<filename>".toString()
    }
}
